{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\metus\\\\Desktop\\\\portfolio-website\\\\frontend\\\\src\\\\context\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/ThemeContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    // Check for saved theme preference or default to light mode\n    const savedTheme = localStorage.getItem('darkMode');\n    if (savedTheme) {\n      setDarkMode(JSON.parse(savedTheme));\n    }\n  }, []);\n  useEffect(() => {\n    // Apply theme to document\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n\n    // Save theme preference\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n  }, [darkMode]);\n  const toggleTheme = () => {\n    setDarkMode(prevMode => !prevMode);\n  };\n  const value = {\n    darkMode,\n    toggleTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"jxWvogfm97D9w3+yMzVp/epPJCw=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","context","Error","ThemeProvider","children","_s2","darkMode","setDarkMode","savedTheme","localStorage","getItem","JSON","parse","document","documentElement","classList","add","remove","setItem","stringify","toggleTheme","prevMode","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/metus/Desktop/portfolio-website/frontend/src/context/ThemeContext.js"],"sourcesContent":["// src/context/ThemeContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check for saved theme preference or default to light mode\r\n    const savedTheme = localStorage.getItem('darkMode');\r\n    if (savedTheme) {\r\n      setDarkMode(JSON.parse(savedTheme));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Apply theme to document\r\n    if (darkMode) {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n    \r\n    // Save theme preference\r\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\r\n  }, [darkMode]);\r\n\r\n  const toggleTheme = () => {\r\n    setDarkMode(prevMode => !prevMode);\r\n  };\r\n\r\n  const value = {\r\n    darkMode,\r\n    toggleTheme\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGR,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACnD,IAAIF,UAAU,EAAE;MACdD,WAAW,CAACI,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IACrC;EACF,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACd;IACA,IAAIW,QAAQ,EAAE;MACZO,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM;MACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD;;IAEA;IACAR,YAAY,CAACS,OAAO,CAAC,UAAU,EAAEP,IAAI,CAACQ,SAAS,CAACb,QAAQ,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBb,WAAW,CAACc,QAAQ,IAAI,CAACA,QAAQ,CAAC;EACpC,CAAC;EAED,MAAMC,KAAK,GAAG;IACZhB,QAAQ;IACRc;EACF,CAAC;EAED,oBACEvB,OAAA,CAACC,YAAY,CAACyB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAlB,QAAA,EACjCA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACtB,GAAA,CArCWF,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}